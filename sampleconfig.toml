# This is a sample Mensago server config file. Each value listed below is the default value.
# Every effort has been made to set this file to sensible defaults so that configuration is
# kept to a minimum. This file is expected to be found in /etc/mensagod/serverconfig.toml 
# or in the same directory as the executable, also named serverconfig.toml in that location.

[database]
# The database section, in theory, should be the only real editing for this file.
#
# Currently only PostgresQL is supported, but the 'engine' parameter exists for future expansion.
# engine = "postgresql"
# ip = "127.0.0.1"
# port = "5432"
# name = "mensago"
# user = "mensago"
password = ""

[network]
# The interface and port to listen on
# listen_ip = "127.0.0.1"
# port = "2001"

[global]
# The domain for the organization.
domain = ""

# The location where workspace data is stored. On Windows, the default is %PROGRAMDATA%\mensago.
# workspace_dir = "/var/mensago"
# 
# The type of registration. 'public' is open to outside registration requests, and would be 
# appropriate only for hosting a public free server. 'moderated' is open to public registration, 
# but an administrator must approve the request before an account can be created. 'network' 
# limits registration to a specified subnet or IP address. 'private' permits account registration 
# only by an administrator. For most workflows 'private' is the appropriate setting.
# registration = "private"
# 
# For servers configured to network registration, this variable sets the subnet(s) to which 
# account registration is limited. Subnets are expected in CIDR notation and comma-separated.
# The default setting restricts registration to the private (non-routable) networks. 
# registration_subnet = "192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8, 127.0.0.1/8"
# registration_subnet6 = "fe80::/10"
# 
# The default storage quota for a workspace, measured in MiB. 0 means no limit.
# default_quota = 0
# 
# Location for log files. This directory requires full permissions for the user mensagod runs as.
# On Windows, this defaults to the same location as the server config file, i.e. 
# C:\\ProgramData\\mensagod
# log_path = "/var/log/mensagod"

[security]
# The Diceware passphrase method is used to generate preregistration and password reset codes. 
# Four word lists are available for use:
# 
# 'eff_long' - List from the Electronic Frontier Foundation of long words.
# 'eff_short' - The EFF's short word list.
# 'eff_short_prefix' - Another short word list from the EFF with some features that make typing 
# 						easier and offer a little more security over eff_short.
# 'original' - Arnold Reinhold's original Diceware word list. Not recommended for most situations.
#
# The EFF's rationale for these word lists can be found at 
# https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases
#
# For more information about Diceware, visit https://theworld.com/~reinhold/diceware.html
# diceware_wordlist = 'eff_short_prefix'
#
# The number of words used in a Diceware code. 6 is recommended for best security in most 
# situations. This value cannot be less than 3.
# diceware_wordcount = 6
#
# The number of seconds to wait after a login failure before accepting another attempt
# failure_delay_sec = 3
# 
# The number of login failures made before a connection is closed. 
# max_failures = 5
# 
# The number of minutes the client must wait after reaching max_failures before another attempt
# may be made. Note that additional attempts to login prior to the completion of this delay resets 
# the timeout.
# lockout_delay_min = 15
# 
# The delay, in minutes, between account registration requests from the same IP address. This is 
# to prevent registration spam
# registration_delay_min = 15
# 
# The amount of time, in minutes, a password reset code is valid. It must be at least 10 and no
# more than 2880 (48 hours).
# password_reset_min = 60
# 
# Adjust the password security strength. Argon2id is used for the hash generation algorithm. This 
# setting may be `normal` or `enhanced`. Normal is best for most situations, but for environments 
# which require extra security, `enhanced` provides additional protection at the cost of higher 
# server demands.
# password_security = normal